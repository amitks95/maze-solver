{"ast":null,"code":"var _jsxFileName = \"D:\\\\maze-solver-main\\\\src\\\\components\\\\ToolTip\\\\ToolTip.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Tooltip } from \"reactstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TooltipItem = props => {\n  _s();\n\n  const {\n    item,\n    id\n  } = props;\n  const [tooltipOpen, setTooltipOpen] = useState(false);\n\n  const toggle = () => setTooltipOpen(!tooltipOpen);\n\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    children: /*#__PURE__*/_jsxDEV(Tooltip, {\n      placement: item.placement,\n      isOpen: tooltipOpen,\n      target: \"Tooltip-\" + id,\n      toggle: toggle,\n      children: item.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TooltipItem, \"W4bzAaoI73SwFEIR2Qbo7WjEE4o=\");\n\n_c = TooltipItem;\n\nconst TooltipExampleMulti = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [{\n      placement: \"bottom\",\n      text: \"Clears the paths created during algorithm visulaization\"\n    }, {\n      placement: \"bottom\",\n      text: \"Clears the paths and walls which were created\"\n    }, {\n      placement: \"bottom\",\n      text: \"Dark mode toggle\"\n    }, {\n      placement: \"bottom\",\n      text: \"Number of nodes traversed\"\n    }, {\n      placement: \"right\",\n      text: \"maze generation algorithms\"\n    }, {\n      placement: \"left\",\n      text: \"path-finding algorithms\"\n    }, {\n      placement: \"auto\",\n      text: \"Github repo for this project\"\n    }].map((tooltip, i) => {\n      return /*#__PURE__*/_jsxDEV(TooltipItem, {\n        item: tooltip,\n        id: i\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 16\n      }, this);\n    })\n  }, void 0, false);\n};\n\n_c2 = TooltipExampleMulti;\nexport default TooltipExampleMulti;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TooltipItem\");\n$RefreshReg$(_c2, \"TooltipExampleMulti\");","map":{"version":3,"names":["React","useState","Tooltip","TooltipItem","props","item","id","tooltipOpen","setTooltipOpen","toggle","placement","text","TooltipExampleMulti","map","tooltip","i"],"sources":["D:/maze-solver-main/src/components/ToolTip/ToolTip.js"],"sourcesContent":["\nimport React, { useState } from \"react\";\nimport { Tooltip } from \"reactstrap\";\n\nconst TooltipItem = props => {\n  const { item, id } = props;\n  const [tooltipOpen, setTooltipOpen] = useState(false);\n\n  const toggle = () => setTooltipOpen(!tooltipOpen);\n\n  return (\n    <span>\n      <Tooltip\n        placement={item.placement}\n        isOpen={tooltipOpen}\n        target={\"Tooltip-\" + id}\n        toggle={toggle}\n      >\n        {item.text}\n      </Tooltip>\n    </span>\n  );\n};\n\nconst TooltipExampleMulti = () => {\n  return (\n    <>\n      {[\n        {\n          placement: \"bottom\",\n          text: \"Clears the paths created during algorithm visulaization\"\n        },\n        {\n          placement: \"bottom\",\n          text: \"Clears the paths and walls which were created\"\n        },\n        {\n          placement: \"bottom\",\n          text: \"Dark mode toggle\"\n        },\n        {\n          placement: \"bottom\",\n          text: \"Number of nodes traversed\"\n        },\n        {\n          placement: \"right\",\n          text: \"maze generation algorithms\"\n        },\n        {\n          placement: \"left\",\n          text: \"path-finding algorithms\"\n        },\n        {\n          placement: \"auto\",\n          text: \"Github repo for this project\"\n        }\n      ].map((tooltip, i) => {\n        return <TooltipItem key={i} item={tooltip} id={i} />;\n      })}\n    </>\n  );\n};\n\nexport default TooltipExampleMulti;"],"mappings":";;;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,YAAxB;;;;AAEA,MAAMC,WAAW,GAAGC,KAAK,IAAI;EAAA;;EAC3B,MAAM;IAAEC,IAAF;IAAQC;EAAR,IAAeF,KAArB;EACA,MAAM,CAACG,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,KAAD,CAA9C;;EAEA,MAAMQ,MAAM,GAAG,MAAMD,cAAc,CAAC,CAACD,WAAF,CAAnC;;EAEA,oBACE;IAAA,uBACE,QAAC,OAAD;MACE,SAAS,EAAEF,IAAI,CAACK,SADlB;MAEE,MAAM,EAAEH,WAFV;MAGE,MAAM,EAAE,aAAaD,EAHvB;MAIE,MAAM,EAAEG,MAJV;MAAA,UAMGJ,IAAI,CAACM;IANR;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAYD,CAlBD;;GAAMR,W;;KAAAA,W;;AAoBN,MAAMS,mBAAmB,GAAG,MAAM;EAChC,oBACE;IAAA,UACG,CACC;MACEF,SAAS,EAAE,QADb;MAEEC,IAAI,EAAE;IAFR,CADD,EAKC;MACED,SAAS,EAAE,QADb;MAEEC,IAAI,EAAE;IAFR,CALD,EASC;MACED,SAAS,EAAE,QADb;MAEEC,IAAI,EAAE;IAFR,CATD,EAaC;MACED,SAAS,EAAE,QADb;MAEEC,IAAI,EAAE;IAFR,CAbD,EAiBC;MACED,SAAS,EAAE,OADb;MAEEC,IAAI,EAAE;IAFR,CAjBD,EAqBC;MACED,SAAS,EAAE,MADb;MAEEC,IAAI,EAAE;IAFR,CArBD,EAyBC;MACED,SAAS,EAAE,MADb;MAEEC,IAAI,EAAE;IAFR,CAzBD,EA6BCE,GA7BD,CA6BK,CAACC,OAAD,EAAUC,CAAV,KAAgB;MACpB,oBAAO,QAAC,WAAD;QAAqB,IAAI,EAAED,OAA3B;QAAoC,EAAE,EAAEC;MAAxC,GAAkBA,CAAlB;QAAA;QAAA;QAAA;MAAA,QAAP;IACD,CA/BA;EADH,iBADF;AAoCD,CArCD;;MAAMH,mB;AAuCN,eAAeA,mBAAf"},"metadata":{},"sourceType":"module"}