{"ast":null,"code":"import _slicedToArray from\"D:/maze-solver-main/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from'react';import classNames from'classnames';import\"./DarkModeToggle.scss\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var CheckedIcon=function CheckedIcon(){return/*#__PURE__*/_jsx(_Fragment,{children:\"\\uD83C\\uDF1C\"});};var UncheckedIcon=function UncheckedIcon(){return/*#__PURE__*/_jsx(_Fragment,{children:\"\\uD83C\\uDF1E\"});};var DarkModeToggle=function DarkModeToggle(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),toggle=_useState2[0],setToggle=_useState2[1];var defaultChecked=props.defaultChecked,onChange=props.onChange,disabled=props.disabled,className=props.className;useEffect(function(){if(defaultChecked){setToggle(defaultChecked);}},[defaultChecked]);var triggerToggle=function triggerToggle(){if(disabled){return;}setToggle(!toggle);if(typeof onChange==='function'){onChange(!toggle);}};var getIcon=function getIcon(type){var icons=props.icons;if(!icons){return null;}return icons[type]===undefined?DarkModeToggle.defaultProps.icons[type]:icons[type];};var toggleClasses=classNames('wrg-toggle',{'wrg-toggle--checked':toggle,'wrg-toggle--disabled':disabled},className);if(toggle){console.log('setting toggle');document.body.classList.remove(\"DarkMode\");document.body.classList.add(\"LightMode\");}else{document.body.classList.remove(\"LightMode\");document.body.classList.add(\"DarkMode\");}return/*#__PURE__*/_jsxs(\"div\",{onClick:triggerToggle,className:toggleClasses,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"wrg-toggle-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"wrg-toggle-check\",children:/*#__PURE__*/_jsx(\"span\",{children:getIcon('checked')})}),/*#__PURE__*/_jsx(\"div\",{className:\"wrg-toggle-uncheck\",children:/*#__PURE__*/_jsx(\"span\",{children:getIcon('unchecked')})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"wrg-toggle-circle\"}),/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",\"aria-label\":\"Toggle Button\",className:\"wrg-toggle-input\"})]});};DarkModeToggle.defaultProps={icons:{checked:/*#__PURE__*/_jsx(CheckedIcon,{}),unchecked:/*#__PURE__*/_jsx(UncheckedIcon,{})}};export default DarkModeToggle;","map":{"version":3,"names":["React","useState","useEffect","classNames","CheckedIcon","UncheckedIcon","DarkModeToggle","props","toggle","setToggle","defaultChecked","onChange","disabled","className","triggerToggle","getIcon","type","icons","undefined","defaultProps","toggleClasses","console","log","document","body","classList","remove","add","checked","unchecked"],"sources":["D:/maze-solver-main/src/components/DarkModeToggle/DarkModeToggle.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport \"./DarkModeToggle.scss\"\n\nconst CheckedIcon = () => <>ðŸŒœ</>;\nconst UncheckedIcon = () => <>ðŸŒž</>;\n\nconst DarkModeToggle = (props) => {\n\n    const [toggle, setToggle] = useState(false);\n    const { defaultChecked, onChange, disabled, className } = props;\n\n    useEffect(() => {\n        if (defaultChecked) {\n            setToggle(defaultChecked)\n        }\n    }, [defaultChecked]);\n\n    const triggerToggle = () => {\n        if ( disabled ) {\n            return;\n        }\n\n        setToggle(!toggle);\n\n        if ( typeof onChange === 'function' ) {\n            onChange(!toggle);\n        }\n    }\n\n    const getIcon = (type) => {\n        const { icons } = props;\n        if ( ! icons ) {\n            return null;\n        }\n\n        return icons[type] === undefined ?\n            DarkModeToggle.defaultProps.icons[type] :\n            icons[type];\n    }\n\n    const toggleClasses = classNames('wrg-toggle', {\n        'wrg-toggle--checked': toggle,\n        'wrg-toggle--disabled': disabled\n    }, className);\n\n    if (toggle) {\n        console.log('setting toggle')\n        document.body.classList.remove(\"DarkMode\");\n        document.body.classList.add(\"LightMode\");\n    }\n    else {\n        document.body.classList.remove(\"LightMode\");\n        document.body.classList.add(\"DarkMode\");\n    }\n\n    return (\n        <div onClick={triggerToggle} className={toggleClasses}>\n            <div className=\"wrg-toggle-container\">\n                <div className=\"wrg-toggle-check\">\n                    <span>{ getIcon('checked') }</span>\n                </div>\n                <div className=\"wrg-toggle-uncheck\">\n                    <span>{ getIcon('unchecked') }</span>\n                </div>\n            </div>\n            <div className=\"wrg-toggle-circle\"></div>\n            <input type=\"checkbox\" aria-label=\"Toggle Button\" className=\"wrg-toggle-input\" />\n        </div>\n    );\n}\n\nDarkModeToggle.defaultProps = {\n    icons: {\n        checked: <CheckedIcon />, \n        unchecked: <UncheckedIcon />\n    }\n};\n\nDarkModeToggle.propTypes = {\n    disabled: PropTypes.bool,\n    defaultChecked: PropTypes.bool,\n    className: PropTypes.string,\n    onChange: PropTypes.func,\n    icons: PropTypes.oneOfType([\n        PropTypes.bool,\n        PropTypes.shape({\n            checked: PropTypes.node,\n            unchecked: PropTypes.node\n        })\n    ])\n};\n\nexport default DarkModeToggle;"],"mappings":"yGAAA,MAAOA,MAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CAEA,MAAOC,WAAP,KAAuB,YAAvB,CACA,MAAO,uBAAP,C,6IAEA,GAAMC,YAAW,CAAG,QAAdA,YAAc,sBAAM,yCAAN,EAApB,CACA,GAAMC,cAAa,CAAG,QAAhBA,cAAgB,sBAAM,yCAAN,EAAtB,CAEA,GAAMC,eAAc,CAAG,QAAjBA,eAAiB,CAACC,KAAD,CAAW,CAE9B,cAA4BN,QAAQ,CAAC,KAAD,CAApC,wCAAOO,MAAP,eAAeC,SAAf,eACA,GAAQC,eAAR,CAA0DH,KAA1D,CAAQG,cAAR,CAAwBC,QAAxB,CAA0DJ,KAA1D,CAAwBI,QAAxB,CAAkCC,QAAlC,CAA0DL,KAA1D,CAAkCK,QAAlC,CAA4CC,SAA5C,CAA0DN,KAA1D,CAA4CM,SAA5C,CAEAX,SAAS,CAAC,UAAM,CACZ,GAAIQ,cAAJ,CAAoB,CAChBD,SAAS,CAACC,cAAD,CAAT,CACH,CACJ,CAJQ,CAIN,CAACA,cAAD,CAJM,CAAT,CAMA,GAAMI,cAAa,CAAG,QAAhBA,cAAgB,EAAM,CACxB,GAAKF,QAAL,CAAgB,CACZ,OACH,CAEDH,SAAS,CAAC,CAACD,MAAF,CAAT,CAEA,GAAK,MAAOG,SAAP,GAAoB,UAAzB,CAAsC,CAClCA,QAAQ,CAAC,CAACH,MAAF,CAAR,CACH,CACJ,CAVD,CAYA,GAAMO,QAAO,CAAG,QAAVA,QAAU,CAACC,IAAD,CAAU,CACtB,GAAQC,MAAR,CAAkBV,KAAlB,CAAQU,KAAR,CACA,GAAK,CAAEA,KAAP,CAAe,CACX,MAAO,KAAP,CACH,CAED,MAAOA,MAAK,CAACD,IAAD,CAAL,GAAgBE,SAAhB,CACHZ,cAAc,CAACa,YAAf,CAA4BF,KAA5B,CAAkCD,IAAlC,CADG,CAEHC,KAAK,CAACD,IAAD,CAFT,CAGH,CATD,CAWA,GAAMI,cAAa,CAAGjB,UAAU,CAAC,YAAD,CAAe,CAC3C,sBAAuBK,MADoB,CAE3C,uBAAwBI,QAFmB,CAAf,CAG7BC,SAH6B,CAAhC,CAKA,GAAIL,MAAJ,CAAY,CACRa,OAAO,CAACC,GAAR,CAAY,gBAAZ,EACAC,QAAQ,CAACC,IAAT,CAAcC,SAAd,CAAwBC,MAAxB,CAA+B,UAA/B,EACAH,QAAQ,CAACC,IAAT,CAAcC,SAAd,CAAwBE,GAAxB,CAA4B,WAA5B,EACH,CAJD,IAKK,CACDJ,QAAQ,CAACC,IAAT,CAAcC,SAAd,CAAwBC,MAAxB,CAA+B,WAA/B,EACAH,QAAQ,CAACC,IAAT,CAAcC,SAAd,CAAwBE,GAAxB,CAA4B,UAA5B,EACH,CAED,mBACI,aAAK,OAAO,CAAEb,aAAd,CAA6B,SAAS,CAAEM,aAAxC,wBACI,aAAK,SAAS,CAAC,sBAAf,wBACI,YAAK,SAAS,CAAC,kBAAf,uBACI,sBAAQL,OAAO,CAAC,SAAD,CAAf,EADJ,EADJ,cAII,YAAK,SAAS,CAAC,oBAAf,uBACI,sBAAQA,OAAO,CAAC,WAAD,CAAf,EADJ,EAJJ,GADJ,cASI,YAAK,SAAS,CAAC,mBAAf,EATJ,cAUI,cAAO,IAAI,CAAC,UAAZ,CAAuB,aAAW,eAAlC,CAAkD,SAAS,CAAC,kBAA5D,EAVJ,GADJ,CAcH,CA/DD,CAiEAT,cAAc,CAACa,YAAf,CAA8B,CAC1BF,KAAK,CAAE,CACHW,OAAO,cAAE,KAAC,WAAD,IADN,CAEHC,SAAS,cAAE,KAAC,aAAD,IAFR,CADmB,CAA9B,CAqBA,cAAevB,eAAf"},"metadata":{},"sourceType":"module"}